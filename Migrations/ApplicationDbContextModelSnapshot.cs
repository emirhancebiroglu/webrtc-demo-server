// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebRTCWebSocketServer.Models;

#nullable disable

namespace WebRTCWebSocketServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebRTCWebSocketServer.Models.CallRecording", b =>
                {
                    b.Property<string>("CallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("CallId");

                    b.ToTable("CallRecordings");
                });

            modelBuilder.Entity("WebRTCWebSocketServer.Models.RecordingFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CallId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CallId");

                    b.ToTable("RecordingFiles");
                });

            modelBuilder.Entity("WebRTCWebSocketServer.Models.RecordingFile", b =>
                {
                    b.HasOne("WebRTCWebSocketServer.Models.CallRecording", "CallRecording")
                        .WithMany("RecordingFiles")
                        .HasForeignKey("CallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallRecording");
                });

            modelBuilder.Entity("WebRTCWebSocketServer.Models.CallRecording", b =>
                {
                    b.Navigation("RecordingFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
